name: Rust CI

on: [workflow_call]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:                # Job-level permissions configuration starts here
      contents: write           # 'write' access to repository contents
      pull-requests: write      # 'write' access to pull requests

    steps:
    - uses: actions/checkout@v2
      name: Check out repository code
      with:
        fetch-depth: 0

    # Setup Rust toolchain
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: '1.73.0'
        override: true

    # Cache dependencies
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Application Version
      id: version
      uses: paulhatch/semantic-version@v5.3.0
      with:
        change_path: src tests
        debug: true

    - name: Print Diagnostic Output
      run: echo $DEBUG_OUTPUT
      env:
        DEBUG_OUTPUT: ${{ needs.version.outputs.version }}

    - name: Set version inside of Cargo.toml
      run: awk 'BEGIN {p=0} /^\[package\]/ {p=1} /^\[/ && !/^\[package\]/ {p=0} p==1 && /^version =/ {$0="version = \"" ENVIRON["VERSION"] "\""} {print}' Cargo.toml > Cargo.tmp && mv Cargo.tmp Cargo.toml
      env:
        VERSION: ${{ steps.version.outputs.version }}


    - name: Cat out Cargo.toml
      run: cat ./Cargo.toml

    # Version
    - name: Display Cargo version
      run: cargo version

    # Build
    - name: Rust Build(cargo build)
      run: cargo build --verbose

    - name: Commit files
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git commit -a -m "Updated version in Cargo.toml to ${{ steps.version.outputs.version }}"
    
    
    - name: Login to Crate.io
      run: cargo login ${{ secrets.CARGO_REGISTRY_TOKEN }}
    
    - name: Publish check for Crate.io (Dry-run)
      run: cargo publish --dry-run
    
    - name: Publish to Crate.io
      run: cargo publish

    - name: Push changes
      uses: ad-m/github-push-action@master
      